Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 53.66      9.32     9.32  1769609     0.00     0.00  ft_calculate_cost_a_to_b
 44.38     17.02     7.70  3539218     0.00     0.00  ft_dclst_dist_head_bidi_len
  0.86     17.17     0.15     6957     0.00     0.00  ft_dclst_find_lo_int
  0.29     17.22     0.05     6002     0.00     0.00  ft_dclst_find_hi_int
  0.17     17.25     0.03        1     0.03     0.03  ft_sort_int_array_bubble
  0.12     17.27     0.02  1769609     0.00     0.00  ft_reset_costs
  0.12     17.29     0.02  1769609     0.00     0.00  ft_set_costs_of_moves
  0.06     17.30     0.01  3539218     0.00     0.00  ft_abs
  0.06     17.31     0.01  1769609     0.00     0.00  ft_set_lowest_node_to_move
  0.06     17.32     0.01   251873     0.00     0.00  ft_putchar_fd
  0.06     17.33     0.01     2999     0.00     0.01  ft_calculate_each_node_in_a
  0.06     17.34     0.01        1     0.01     0.05  ft_assign_indexes_to_labels
  0.06     17.35     0.01        1     0.01     0.01  ft_labels_are_distinct_and_size_int
  0.06     17.36     0.01        1     0.01     0.01  ft_match_index
  0.06     17.37     0.01                             ft_get_digits
  0.00     17.37     0.00    73310     0.00     0.00  ft_dprintf
  0.00     17.37     0.00    73310     0.00     0.00  ft_handle_last
  0.00     17.37     0.00    73310     0.00     0.00  ft_strlen
  0.00     17.37     0.00    18394     0.00     0.00  ft_rb
  0.00     17.37     0.00    16857     0.00     0.00  ft_rrb
  0.00     17.37     0.00    11998     0.00     0.00  ft_atoi
  0.00     17.37     0.00    11336     0.00     0.00  ft_isdigit
  0.00     17.37     0.00     9465     0.00     0.00  ft_rr
  0.00     17.37     0.00     7909     0.00     0.00  ft_rrr
  0.00     17.37     0.00     7508     0.00     0.00  ft_ra
  0.00     17.37     0.00     7177     0.00     0.00  ft_rra
  0.00     17.37     0.00     5996     0.00     0.00  ft_push_multi_to_multi
  0.00     17.37     0.00     3001     0.00     0.00  ft_find_hi_lo_nodes
  0.00     17.37     0.00     3000     0.00     0.00  ft_dclstadd_back
  0.00     17.37     0.00     3000     0.00     0.00  ft_init_node_values
  0.00     17.37     0.00     3000     0.00     0.00  ft_isspace
  0.00     17.37     0.00     3000     0.00     0.00  ft_pa
  0.00     17.37     0.00     3000     0.00     0.00  ft_pb
  0.00     17.37     0.00     2999     0.00     0.01  ft_calculate_all_costs
  0.00     17.37     0.00     2999     0.00     0.00  ft_move
  0.00     17.37     0.00      949     0.00     0.00  ft_move_rot
  0.00     17.37     0.00      810     0.00     0.00  ft_move_opo_srot_drev
  0.00     17.37     0.00      632     0.00     0.00  ft_move_rev
  0.00     17.37     0.00      608     0.00     0.00  ft_move_opo_srev_drot
  0.00     17.37     0.00        4     0.00     0.00  ft_dclstsize
  0.00     17.37     0.00        2     0.00     0.00  ft_check_int_normal
  0.00     17.37     0.00        2     0.00     0.00  ft_dclst_circ_sortd
  0.00     17.37     0.00        2     0.00     0.00  ft_dclst_dist_head_bidi
  0.00     17.37     0.00        2     0.00     0.00  ft_move_node_to_top
  0.00     17.37     0.00        2     0.00     0.00  ft_push_multi_to_empty
  0.00     17.37     0.00        2     0.00     0.00  ft_push_single_to_multi
  0.00     17.37     0.00        2     0.00     0.00  ft_update_partially_sorted_status
  0.00     17.37     0.00        1     0.00     0.00  ft_dclstclear_simple
  0.00     17.37     0.00        1     0.00     0.00  ft_init_stack_b
  0.00     17.37     0.00        1     0.00     0.05  ft_init_stacks_and_table
  0.00     17.37     0.00        1     0.00     0.00  ft_labels_are_integer_only
  0.00     17.37     0.00        1     0.00     0.00  ft_labels_are_sorted
  0.00     17.37     0.00        1     0.00     0.00  ft_malloc_and_init_nodes
  0.00     17.37     0.00        1     0.00     0.01  ft_validate_args
  0.00     17.37     0.00        1     0.00    17.30  run_algo_high

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.06% of 17.37 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.9    0.00   17.36                 main [1]
                0.00   17.30       1/1           run_algo_high [2]
                0.00    0.05       1/1           ft_init_stacks_and_table [9]
                0.00    0.01       1/1           ft_validate_args [21]
                0.00    0.00       1/1           ft_dclstclear_simple [53]
-----------------------------------------------
                0.00   17.30       1/1           main [1]
[2]     99.6    0.00   17.30       1         run_algo_high [2]
                0.00   17.27    2999/2999        ft_calculate_all_costs [3]
                0.00    0.03    2999/2999        ft_move [12]
                0.00    0.00    3000/3000        ft_pa [35]
                0.00    0.00       2/2           ft_move_node_to_top [37]
                0.00    0.00       1/3001        ft_find_hi_lo_nodes [7]
                0.00    0.00       1/1           ft_init_stack_b [41]
-----------------------------------------------
                0.00   17.27    2999/2999        run_algo_high [2]
[3]     99.4    0.00   17.27    2999         ft_calculate_all_costs [3]
                0.01   17.08    2999/2999        ft_calculate_each_node_in_a [4]
                0.00    0.18    2999/3001        ft_find_hi_lo_nodes [7]
-----------------------------------------------
                0.01   17.08    2999/2999        ft_calculate_all_costs [3]
[4]     98.4    0.01   17.08    2999         ft_calculate_each_node_in_a [4]
                9.32    7.73 1769609/1769609     ft_calculate_cost_a_to_b [5]
                0.02    0.00 1769609/1769609     ft_reset_costs [15]
                0.01    0.00 1769609/1769609     ft_set_lowest_node_to_move [17]
-----------------------------------------------
                9.32    7.73 1769609/1769609     ft_calculate_each_node_in_a [4]
[5]     98.2    9.32    7.73 1769609         ft_calculate_cost_a_to_b [5]
                7.70    0.00 3539218/3539218     ft_dclst_dist_head_bidi_len [6]
                0.02    0.01 1769609/1769609     ft_set_costs_of_moves [13]
-----------------------------------------------
                7.70    0.00 3539218/3539218     ft_calculate_cost_a_to_b [5]
[6]     44.4    7.70    0.00 3539218         ft_dclst_dist_head_bidi_len [6]
-----------------------------------------------
                0.00    0.00       1/3001        run_algo_high [2]
                0.00    0.00       1/3001        ft_init_stacks_and_table [9]
                0.00    0.18    2999/3001        ft_calculate_all_costs [3]
[7]      1.0    0.00    0.18    3001         ft_find_hi_lo_nodes [7]
                0.13    0.00    6002/6957        ft_dclst_find_lo_int [8]
                0.05    0.00    6002/6002        ft_dclst_find_hi_int [10]
-----------------------------------------------
                0.00    0.00       2/6957        ft_check_int_normal [38]
                0.02    0.00     953/6957        ft_move [12]
                0.13    0.00    6002/6957        ft_find_hi_lo_nodes [7]
[8]      0.9    0.15    0.00    6957         ft_dclst_find_lo_int [8]
-----------------------------------------------
                0.00    0.05       1/1           main [1]
[9]      0.3    0.00    0.05       1         ft_init_stacks_and_table [9]
                0.01    0.04       1/1           ft_assign_indexes_to_labels [11]
                0.00    0.00       1/3001        ft_find_hi_lo_nodes [7]
                0.00    0.00       1/2           ft_update_partially_sorted_status [40]
                0.00    0.00       1/1           ft_malloc_and_init_nodes [56]
                0.00    0.00       1/4           ft_dclstsize [49]
-----------------------------------------------
                0.05    0.00    6002/6002        ft_find_hi_lo_nodes [7]
[10]     0.3    0.05    0.00    6002         ft_dclst_find_hi_int [10]
-----------------------------------------------
                0.01    0.04       1/1           ft_init_stacks_and_table [9]
[11]     0.3    0.01    0.04       1         ft_assign_indexes_to_labels [11]
                0.03    0.00       1/1           ft_sort_int_array_bubble [14]
                0.01    0.00       1/1           ft_match_index [20]
-----------------------------------------------
                0.00    0.03    2999/2999        run_algo_high [2]
[12]     0.2    0.00    0.03    2999         ft_move [12]
                0.02    0.00     953/6957        ft_dclst_find_lo_int [8]
                0.00    0.00     949/949         ft_move_rot [24]
                0.00    0.00     632/632         ft_move_rev [27]
                0.00    0.00     810/810         ft_move_opo_srot_drev [29]
                0.00    0.00     608/608         ft_move_opo_srev_drot [30]
-----------------------------------------------
                0.02    0.01 1769609/1769609     ft_calculate_cost_a_to_b [5]
[13]     0.2    0.02    0.01 1769609         ft_set_costs_of_moves [13]
                0.01    0.00 3539218/3539218     ft_abs [16]
-----------------------------------------------
                0.03    0.00       1/1           ft_assign_indexes_to_labels [11]
[14]     0.2    0.03    0.00       1         ft_sort_int_array_bubble [14]
-----------------------------------------------
                0.02    0.00 1769609/1769609     ft_calculate_each_node_in_a [4]
[15]     0.1    0.02    0.00 1769609         ft_reset_costs [15]
-----------------------------------------------
                0.01    0.00 3539218/3539218     ft_set_costs_of_moves [13]
[16]     0.1    0.01    0.00 3539218         ft_abs [16]
-----------------------------------------------
                0.01    0.00 1769609/1769609     ft_calculate_each_node_in_a [4]
[17]     0.1    0.01    0.00 1769609         ft_set_lowest_node_to_move [17]
-----------------------------------------------
                0.00    0.00   73310/251873      ft_handle_last [25]
                0.01    0.00  178563/251873      ft_dprintf [23]
[18]     0.1    0.01    0.00  251873         ft_putchar_fd [18]
-----------------------------------------------
                0.01    0.00       1/1           ft_validate_args [21]
[19]     0.1    0.01    0.00       1         ft_labels_are_distinct_and_size_int [19]
                0.00    0.00    3000/11998       ft_atoi [43]
-----------------------------------------------
                0.01    0.00       1/1           ft_assign_indexes_to_labels [11]
[20]     0.1    0.01    0.00       1         ft_match_index [20]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[21]     0.1    0.00    0.01       1         ft_validate_args [21]
                0.01    0.00       1/1           ft_labels_are_distinct_and_size_int [19]
                0.00    0.00       1/1           ft_labels_are_integer_only [54]
                0.00    0.00       1/1           ft_labels_are_sorted [55]
-----------------------------------------------
                                                 <spontaneous>
[22]     0.1    0.01    0.00                 ft_get_digits [22]
-----------------------------------------------
                0.00    0.00    3000/73310       ft_pa [35]
                0.00    0.00    3000/73310       ft_pb [36]
                0.00    0.00    7177/73310       ft_rra [34]
                0.00    0.00    7508/73310       ft_ra [33]
                0.00    0.00    7909/73310       ft_rrr [32]
                0.00    0.00    9465/73310       ft_rr [31]
                0.00    0.00   16857/73310       ft_rrb [28]
                0.00    0.00   18394/73310       ft_rb [26]
[23]     0.1    0.00    0.01   73310         ft_dprintf [23]
                0.01    0.00  178563/251873      ft_putchar_fd [18]
                0.00    0.00   73310/73310       ft_handle_last [25]
                0.00    0.00   73310/73310       ft_strlen [42]
-----------------------------------------------
                0.00    0.00     949/949         ft_move [12]
[24]     0.0    0.00    0.00     949         ft_move_rot [24]
                0.00    0.00    9888/18394       ft_rb [26]
                0.00    0.00    9465/9465        ft_rr [31]
                0.00    0.00    1147/7508        ft_ra [33]
                0.00    0.00     949/3000        ft_pb [36]
-----------------------------------------------
                0.00    0.00   73310/73310       ft_dprintf [23]
[25]     0.0    0.00    0.00   73310         ft_handle_last [25]
                0.00    0.00   73310/251873      ft_putchar_fd [18]
-----------------------------------------------
                0.00    0.00     509/18394       ft_move_node_to_top [37]
                0.00    0.00    7997/18394       ft_move_opo_srev_drot [30]
                0.00    0.00    9888/18394       ft_move_rot [24]
[26]     0.0    0.00    0.00   18394         ft_rb [26]
                0.00    0.00   18394/73310       ft_dprintf [23]
-----------------------------------------------
                0.00    0.00     632/632         ft_move [12]
[27]     0.0    0.00    0.00     632         ft_move_rev [27]
                0.00    0.00    7909/7909        ft_rrr [32]
                0.00    0.00    7746/16857       ft_rrb [28]
                0.00    0.00    1197/7177        ft_rra [34]
                0.00    0.00     632/3000        ft_pb [36]
-----------------------------------------------
                0.00    0.00    7746/16857       ft_move_rev [27]
                0.00    0.00    9111/16857       ft_move_opo_srot_drev [29]
[28]     0.0    0.00    0.00   16857         ft_rrb [28]
                0.00    0.00   16857/73310       ft_dprintf [23]
-----------------------------------------------
                0.00    0.00     810/810         ft_move [12]
[29]     0.0    0.00    0.00     810         ft_move_opo_srot_drev [29]
                0.00    0.00    9111/16857       ft_rrb [28]
                0.00    0.00    6360/7508        ft_ra [33]
                0.00    0.00     810/3000        ft_pb [36]
-----------------------------------------------
                0.00    0.00     608/608         ft_move [12]
[30]     0.0    0.00    0.00     608         ft_move_opo_srev_drot [30]
                0.00    0.00    7997/18394       ft_rb [26]
                0.00    0.00    5980/7177        ft_rra [34]
                0.00    0.00     608/3000        ft_pb [36]
-----------------------------------------------
                0.00    0.00    9465/9465        ft_move_rot [24]
[31]     0.0    0.00    0.00    9465         ft_rr [31]
                0.00    0.00    9465/73310       ft_dprintf [23]
-----------------------------------------------
                0.00    0.00    7909/7909        ft_move_rev [27]
[32]     0.0    0.00    0.00    7909         ft_rrr [32]
                0.00    0.00    7909/73310       ft_dprintf [23]
-----------------------------------------------
                0.00    0.00       1/7508        ft_init_stack_b [41]
                0.00    0.00    1147/7508        ft_move_rot [24]
                0.00    0.00    6360/7508        ft_move_opo_srot_drev [29]
[33]     0.0    0.00    0.00    7508         ft_ra [33]
                0.00    0.00    7508/73310       ft_dprintf [23]
-----------------------------------------------
                0.00    0.00    1197/7177        ft_move_rev [27]
                0.00    0.00    5980/7177        ft_move_opo_srev_drot [30]
[34]     0.0    0.00    0.00    7177         ft_rra [34]
                0.00    0.00    7177/73310       ft_dprintf [23]
-----------------------------------------------
                0.00    0.00    3000/3000        run_algo_high [2]
[35]     0.0    0.00    0.00    3000         ft_pa [35]
                0.00    0.00    3000/73310       ft_dprintf [23]
                0.00    0.00    2998/5996        ft_push_multi_to_multi [45]
                0.00    0.00       1/2           ft_push_multi_to_empty [51]
                0.00    0.00       1/2           ft_push_single_to_multi [52]
-----------------------------------------------
                0.00    0.00       1/3000        ft_init_stack_b [41]
                0.00    0.00     608/3000        ft_move_opo_srev_drot [30]
                0.00    0.00     632/3000        ft_move_rev [27]
                0.00    0.00     810/3000        ft_move_opo_srot_drev [29]
                0.00    0.00     949/3000        ft_move_rot [24]
[36]     0.0    0.00    0.00    3000         ft_pb [36]
                0.00    0.00    3000/73310       ft_dprintf [23]
                0.00    0.00    2998/5996        ft_push_multi_to_multi [45]
                0.00    0.00       1/2           ft_push_multi_to_empty [51]
                0.00    0.00       1/2           ft_push_single_to_multi [52]
-----------------------------------------------
                0.00    0.00       2/2           run_algo_high [2]
[37]     0.0    0.00    0.00       2         ft_move_node_to_top [37]
                0.00    0.00     509/18394       ft_rb [26]
                0.00    0.00       2/2           ft_dclst_dist_head_bidi [50]
-----------------------------------------------
                0.00    0.00       2/2           ft_dclst_circ_sortd [39]
[38]     0.0    0.00    0.00       2         ft_check_int_normal [38]
                0.00    0.00       2/6957        ft_dclst_find_lo_int [8]
                0.00    0.00       2/4           ft_dclstsize [49]
-----------------------------------------------
                0.00    0.00       2/2           ft_update_partially_sorted_status [40]
[39]     0.0    0.00    0.00       2         ft_dclst_circ_sortd [39]
                0.00    0.00       2/2           ft_check_int_normal [38]
-----------------------------------------------
                0.00    0.00       1/2           ft_init_stacks_and_table [9]
                0.00    0.00       1/2           ft_init_stack_b [41]
[40]     0.0    0.00    0.00       2         ft_update_partially_sorted_status [40]
                0.00    0.00       2/2           ft_dclst_circ_sortd [39]
-----------------------------------------------
                0.00    0.00       1/1           run_algo_high [2]
[41]     0.0    0.00    0.00       1         ft_init_stack_b [41]
                0.00    0.00       1/2           ft_update_partially_sorted_status [40]
                0.00    0.00       1/7508        ft_ra [33]
                0.00    0.00       1/3000        ft_pb [36]
-----------------------------------------------
                0.00    0.00   73310/73310       ft_dprintf [23]
[42]     0.0    0.00    0.00   73310         ft_strlen [42]
-----------------------------------------------
                0.00    0.00    3000/11998       ft_labels_are_distinct_and_size_int [19]
                0.00    0.00    3000/11998       ft_malloc_and_init_nodes [56]
                0.00    0.00    5998/11998       ft_labels_are_sorted [55]
[43]     0.0    0.00    0.00   11998         ft_atoi [43]
-----------------------------------------------
                0.00    0.00   11336/11336       ft_labels_are_integer_only [54]
[44]     0.0    0.00    0.00   11336         ft_isdigit [44]
-----------------------------------------------
                0.00    0.00    2998/5996        ft_pa [35]
                0.00    0.00    2998/5996        ft_pb [36]
[45]     0.0    0.00    0.00    5996         ft_push_multi_to_multi [45]
-----------------------------------------------
                0.00    0.00    3000/3000        ft_malloc_and_init_nodes [56]
[46]     0.0    0.00    0.00    3000         ft_dclstadd_back [46]
-----------------------------------------------
                0.00    0.00    3000/3000        ft_malloc_and_init_nodes [56]
[47]     0.0    0.00    0.00    3000         ft_init_node_values [47]
-----------------------------------------------
                0.00    0.00    3000/3000        ft_labels_are_integer_only [54]
[48]     0.0    0.00    0.00    3000         ft_isspace [48]
-----------------------------------------------
                0.00    0.00       1/4           ft_init_stacks_and_table [9]
                0.00    0.00       1/4           ft_dclst_dist_head_bidi [50]
                0.00    0.00       2/4           ft_check_int_normal [38]
[49]     0.0    0.00    0.00       4         ft_dclstsize [49]
-----------------------------------------------
                0.00    0.00       2/2           ft_move_node_to_top [37]
[50]     0.0    0.00    0.00       2         ft_dclst_dist_head_bidi [50]
                0.00    0.00       1/4           ft_dclstsize [49]
-----------------------------------------------
                0.00    0.00       1/2           ft_pa [35]
                0.00    0.00       1/2           ft_pb [36]
[51]     0.0    0.00    0.00       2         ft_push_multi_to_empty [51]
-----------------------------------------------
                0.00    0.00       1/2           ft_pa [35]
                0.00    0.00       1/2           ft_pb [36]
[52]     0.0    0.00    0.00       2         ft_push_single_to_multi [52]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[53]     0.0    0.00    0.00       1         ft_dclstclear_simple [53]
-----------------------------------------------
                0.00    0.00       1/1           ft_validate_args [21]
[54]     0.0    0.00    0.00       1         ft_labels_are_integer_only [54]
                0.00    0.00   11336/11336       ft_isdigit [44]
                0.00    0.00    3000/3000        ft_isspace [48]
-----------------------------------------------
                0.00    0.00       1/1           ft_validate_args [21]
[55]     0.0    0.00    0.00       1         ft_labels_are_sorted [55]
                0.00    0.00    5998/11998       ft_atoi [43]
-----------------------------------------------
                0.00    0.00       1/1           ft_init_stacks_and_table [9]
[56]     0.0    0.00    0.00       1         ft_malloc_and_init_nodes [56]
                0.00    0.00    3000/11998       ft_atoi [43]
                0.00    0.00    3000/3000        ft_dclstadd_back [46]
                0.00    0.00    3000/3000        ft_init_node_values [47]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [16] ft_abs                 [47] ft_init_node_values (init_stack_a.c) [45] ft_push_multi_to_multi (moves_pa_pb.c)
  [11] ft_assign_indexes_to_labels (init_stack_a.c) [41] ft_init_stack_b [52] ft_push_single_to_multi (moves_pa_pb.c)
  [43] ft_atoi                 [9] ft_init_stacks_and_table [18] ft_putchar_fd
   [3] ft_calculate_all_costs [44] ft_isdigit             [33] ft_ra
   [5] ft_calculate_cost_a_to_b [48] ft_isspace           [26] ft_rb
   [4] ft_calculate_each_node_in_a (costs_calculate.c) [19] ft_labels_are_distinct_and_size_int (validate_args.c) [15] ft_reset_costs (costs_calculate.c)
  [38] ft_check_int_normal    [54] ft_labels_are_integer_only (validate_args.c) [31] ft_rr
  [39] ft_dclst_circ_sortd    [55] ft_labels_are_sorted (validate_args.c) [34] ft_rra
  [50] ft_dclst_dist_head_bidi [56] ft_malloc_and_init_nodes [28] ft_rrb
   [6] ft_dclst_dist_head_bidi_len [20] ft_match_index (init_stack_a.c) [32] ft_rrr
  [10] ft_dclst_find_hi_int   [12] ft_move                [13] ft_set_costs_of_moves (costs_rot_rev_opo.c)
   [8] ft_dclst_find_lo_int   [37] ft_move_node_to_top    [17] ft_set_lowest_node_to_move (costs_calculate.c)
  [46] ft_dclstadd_back       [30] ft_move_opo_srev_drot  [14] ft_sort_int_array_bubble
  [53] ft_dclstclear_simple   [29] ft_move_opo_srot_drev  [42] ft_strlen
  [49] ft_dclstsize           [27] ft_move_rev            [40] ft_update_partially_sorted_status
  [23] ft_dprintf             [24] ft_move_rot            [21] ft_validate_args
   [7] ft_find_hi_lo_nodes    [35] ft_pa                   [2] run_algo_high (push_swap.c)
  [22] ft_get_digits          [36] ft_pb
  [25] ft_handle_last         [51] ft_push_multi_to_empty (moves_pa_pb.c)
