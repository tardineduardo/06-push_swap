gprof ./push_swap gmon.out > profile.txt

Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 56.25      0.18     0.18   604536     0.30     0.30  ft_dclst_dist_head_bidi_len
 43.75      0.32     0.14   302268     0.46     1.06  calculate_cost_a_to_b
  0.00      0.32     0.00   302268     0.00     0.00  ft_reset_costs
  0.00      0.32     0.00   302268     0.00     0.00  set_costs_of_moves
  0.00      0.32     0.00   302268     0.00     0.00  set_lowest_node_to_move
  0.00      0.32     0.00    49245     0.00     0.00  ft_putchar_fd
  0.00      0.32     0.00    14534     0.00     0.00  ft_dprintf
  0.00      0.32     0.00    14534     0.00     0.00  ft_handle_last
  0.00      0.32     0.00    14534     0.00     0.00  ft_strlen
  0.00      0.32     0.00     3998     0.00     0.00  ft_atoi
  0.00      0.32     0.00     3797     0.00     0.00  rb
  0.00      0.32     0.00     3767     0.00     0.00  ft_dclst_find_lowest_int
  0.00      0.32     0.00     2893     0.00     0.00  ft_isdigit
  0.00      0.32     0.00     2859     0.00     0.00  rrb
  0.00      0.32     0.00     2200     0.00     0.00  ft_dclst_find_highest_int
  0.00      0.32     0.00     1996     0.00     0.00  ft_push_multi_to_multi
  0.00      0.32     0.00     1687     0.00     0.00  rr
  0.00      0.32     0.00     1497     0.00     0.00  rrr
  0.00      0.32     0.00     1407     0.00     0.00  ra
  0.00      0.32     0.00     1287     0.00     0.00  rra
  0.00      0.32     0.00     1001     0.00     0.00  find_hi_lo_nodes
  0.00      0.32     0.00     1000     0.00     0.00  ft_dclstadd_back
  0.00      0.32     0.00     1000     0.00     0.00  ft_init_node_values
  0.00      0.32     0.00     1000     0.00     0.00  ft_isspace
  0.00      0.32     0.00     1000     0.00     0.00  pa
  0.00      0.32     0.00     1000     0.00     0.00  pb
  0.00      0.32     0.00      999     0.00   320.32  calculate_all_costs
  0.00      0.32     0.00      999     0.00   320.32  calculate_each_node_in_a
  0.00      0.32     0.00      999     0.00     0.00  move
  0.00      0.32     0.00      999     0.00     0.00  select_move_to_execute
  0.00      0.32     0.00      999     0.00     0.00  update_sorted_status
  0.00      0.32     0.00      290     0.00     0.00  move_rot
  0.00      0.32     0.00      246     0.00     0.00  move_opo_srot_drev
  0.00      0.32     0.00      240     0.00     0.00  move_opo_srev_drot
  0.00      0.32     0.00      223     0.00     0.00  move_rev
  0.00      0.32     0.00      198     0.00     0.00  ft_dclst_clock_sortd
  0.00      0.32     0.00       99     0.00     0.00  ft_check_int_normal_2
  0.00      0.32     0.00       99     0.00     0.00  ft_check_int_reverse_2
  0.00      0.32     0.00        2     0.00     0.00  ft_dclst_dist_head_bidi
  0.00      0.32     0.00        2     0.00     0.00  ft_dclstsize
  0.00      0.32     0.00        2     0.00     0.00  ft_push_multi_to_empty
  0.00      0.32     0.00        2     0.00     0.00  ft_push_single_to_multi
  0.00      0.32     0.00        2     0.00     0.00  move_node_to_top
  0.00      0.32     0.00        1     0.00     0.00  ft_assign_indexes_to_labels
  0.00      0.32     0.00        1     0.00     0.00  ft_init_stack_b
  0.00      0.32     0.00        1     0.00     0.00  ft_init_stacks_and_table
  0.00      0.32     0.00        1     0.00     0.00  ft_labels_are_distinct_and_size_int
  0.00      0.32     0.00        1     0.00     0.00  ft_labels_are_integer_only
  0.00      0.32     0.00        1     0.00     0.00  ft_labels_are_sorted
  0.00      0.32     0.00        1     0.00     0.00  ft_malloc_and_init_nodes
  0.00      0.32     0.00        1     0.00     0.00  ft_match_index
  0.00      0.32     0.00        1     0.00     0.00  ft_sort_int_array_bubble
  0.00      0.32     0.00        1     0.00     0.00  ft_validate_args

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2024 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 3.12% of 0.32 seconds

index % time    self  children    called     name
                0.14    0.18  302268/302268      calculate_each_node_in_a [3]
[1]    100.0    0.14    0.18  302268         calculate_cost_a_to_b [1]
                0.18    0.00  604536/604536      ft_dclst_dist_head_bidi_len [5]
                0.00    0.00  302268/302268      set_costs_of_moves [7]
-----------------------------------------------
                0.00    0.32     999/999         main [4]
[2]    100.0    0.00    0.32     999         calculate_all_costs [2]
                0.00    0.32     999/999         calculate_each_node_in_a [3]
                0.00    0.00     999/1001        find_hi_lo_nodes [24]
-----------------------------------------------
                0.00    0.32     999/999         calculate_all_costs [2]
[3]    100.0    0.00    0.32     999         calculate_each_node_in_a [3]
                0.14    0.18  302268/302268      calculate_cost_a_to_b [1]
                0.00    0.00  302268/302268      ft_reset_costs [6]
                0.00    0.00  302268/302268      set_lowest_node_to_move [8]
-----------------------------------------------
                                                 <spontaneous>
[4]    100.0    0.00    0.32                 main [4]
                0.00    0.32     999/999         calculate_all_costs [2]
                0.00    0.00    1000/1000        pa [28]
                0.00    0.00     999/999         update_sorted_status [32]
                0.00    0.00     999/999         move [30]
                0.00    0.00       2/1001        find_hi_lo_nodes [24]
                0.00    0.00       2/2           move_node_to_top [44]
                0.00    0.00       1/1           ft_validate_args [54]
                0.00    0.00       1/1           ft_init_stacks_and_table [47]
                0.00    0.00       1/1           ft_init_stack_b [46]
-----------------------------------------------
                0.18    0.00  604536/604536      calculate_cost_a_to_b [1]
[5]     56.2    0.18    0.00  604536         ft_dclst_dist_head_bidi_len [5]
-----------------------------------------------
                0.00    0.00  302268/302268      calculate_each_node_in_a [3]
[6]      0.0    0.00    0.00  302268         ft_reset_costs [6]
-----------------------------------------------
                0.00    0.00  302268/302268      calculate_cost_a_to_b [1]
[7]      0.0    0.00    0.00  302268         set_costs_of_moves [7]
-----------------------------------------------
                0.00    0.00  302268/302268      calculate_each_node_in_a [3]
[8]      0.0    0.00    0.00  302268         set_lowest_node_to_move [8]
-----------------------------------------------
                0.00    0.00   14534/49245       ft_handle_last [11]
                0.00    0.00   34711/49245       ft_dprintf [10]
[9]      0.0    0.00    0.00   49245         ft_putchar_fd [9]
-----------------------------------------------
                0.00    0.00    1000/14534       pa [28]
                0.00    0.00    1000/14534       pb [29]
                0.00    0.00    1287/14534       rra [23]
                0.00    0.00    1407/14534       ra [22]
                0.00    0.00    1497/14534       rrr [21]
                0.00    0.00    1687/14534       rr [20]
                0.00    0.00    2859/14534       rrb [17]
                0.00    0.00    3797/14534       rb [14]
[10]     0.0    0.00    0.00   14534         ft_dprintf [10]
                0.00    0.00   34711/49245       ft_putchar_fd [9]
                0.00    0.00   14534/14534       ft_strlen [12]
                0.00    0.00   14534/14534       ft_handle_last [11]
-----------------------------------------------
                0.00    0.00   14534/14534       ft_dprintf [10]
[11]     0.0    0.00    0.00   14534         ft_handle_last [11]
                0.00    0.00   14534/49245       ft_putchar_fd [9]
-----------------------------------------------
                0.00    0.00   14534/14534       ft_dprintf [10]
[12]     0.0    0.00    0.00   14534         ft_strlen [12]
-----------------------------------------------
                0.00    0.00    1000/3998        ft_labels_are_distinct_and_size_int [48]
                0.00    0.00    1000/3998        ft_malloc_and_init_nodes [51]
                0.00    0.00    1998/3998        ft_labels_are_sorted [50]
[13]     0.0    0.00    0.00    3998         ft_atoi [13]
-----------------------------------------------
                0.00    0.00     453/3797        move_node_to_top [44]
                0.00    0.00    1587/3797        move_rot [33]
                0.00    0.00    1757/3797        move_opo_srev_drot [35]
[14]     0.0    0.00    0.00    3797         rb [14]
                0.00    0.00    3797/14534       ft_dprintf [10]
-----------------------------------------------
                0.00    0.00      99/3767        ft_check_int_reverse_2 [39]
                0.00    0.00      99/3767        ft_check_int_normal_2 [38]
                0.00    0.00    1567/3767        move [30]
                0.00    0.00    2002/3767        find_hi_lo_nodes [24]
[15]     0.0    0.00    0.00    3767         ft_dclst_find_lowest_int [15]
-----------------------------------------------
                0.00    0.00    2893/2893        ft_labels_are_integer_only [49]
[16]     0.0    0.00    0.00    2893         ft_isdigit [16]
-----------------------------------------------
                0.00    0.00    1097/2859        move_rev [36]
                0.00    0.00    1762/2859        move_opo_srot_drev [34]
[17]     0.0    0.00    0.00    2859         rrb [17]
                0.00    0.00    2859/14534       ft_dprintf [10]
-----------------------------------------------
                0.00    0.00      99/2200        ft_check_int_reverse_2 [39]
                0.00    0.00      99/2200        ft_check_int_normal_2 [38]
                0.00    0.00    2002/2200        find_hi_lo_nodes [24]
[18]     0.0    0.00    0.00    2200         ft_dclst_find_highest_int [18]
-----------------------------------------------
                0.00    0.00     998/1996        pa [28]
                0.00    0.00     998/1996        pb [29]
[19]     0.0    0.00    0.00    1996         ft_push_multi_to_multi [19]
-----------------------------------------------
                0.00    0.00    1687/1687        move_rot [33]
[20]     0.0    0.00    0.00    1687         rr [20]
                0.00    0.00    1687/14534       ft_dprintf [10]
-----------------------------------------------
                0.00    0.00    1497/1497        move_rev [36]
[21]     0.0    0.00    0.00    1497         rrr [21]
                0.00    0.00    1497/14534       ft_dprintf [10]
-----------------------------------------------
                0.00    0.00       2/1407        ft_init_stack_b [46]
                0.00    0.00     207/1407        move_rot [33]
                0.00    0.00    1198/1407        move_opo_srot_drev [34]
[22]     0.0    0.00    0.00    1407         ra [22]
                0.00    0.00    1407/14534       ft_dprintf [10]
-----------------------------------------------
                0.00    0.00     121/1287        move_rev [36]
                0.00    0.00    1166/1287        move_opo_srev_drot [35]
[23]     0.0    0.00    0.00    1287         rra [23]
                0.00    0.00    1287/14534       ft_dprintf [10]
-----------------------------------------------
                0.00    0.00       2/1001        main [4]
                0.00    0.00     999/1001        calculate_all_costs [2]
[24]     0.0    0.00    0.00    1001         find_hi_lo_nodes [24]
                0.00    0.00    2002/2200        ft_dclst_find_highest_int [18]
                0.00    0.00    2002/3767        ft_dclst_find_lowest_int [15]
-----------------------------------------------
                0.00    0.00    1000/1000        ft_malloc_and_init_nodes [51]
[25]     0.0    0.00    0.00    1000         ft_dclstadd_back [25]
-----------------------------------------------
                0.00    0.00    1000/1000        ft_malloc_and_init_nodes [51]
[26]     0.0    0.00    0.00    1000         ft_init_node_values [26]
-----------------------------------------------
                0.00    0.00    1000/1000        ft_labels_are_integer_only [49]
[27]     0.0    0.00    0.00    1000         ft_isspace [27]
-----------------------------------------------
                0.00    0.00    1000/1000        main [4]
[28]     0.0    0.00    0.00    1000         pa [28]
                0.00    0.00    1000/14534       ft_dprintf [10]
                0.00    0.00     998/1996        ft_push_multi_to_multi [19]
                0.00    0.00       1/2           ft_push_multi_to_empty [42]
                0.00    0.00       1/2           ft_push_single_to_multi [43]
-----------------------------------------------
                0.00    0.00       1/1000        ft_init_stack_b [46]
                0.00    0.00     223/1000        move_rev [36]
                0.00    0.00     240/1000        move_opo_srev_drot [35]
                0.00    0.00     246/1000        move_opo_srot_drev [34]
                0.00    0.00     290/1000        move_rot [33]
[29]     0.0    0.00    0.00    1000         pb [29]
                0.00    0.00    1000/14534       ft_dprintf [10]
                0.00    0.00     998/1996        ft_push_multi_to_multi [19]
                0.00    0.00       1/2           ft_push_multi_to_empty [42]
                0.00    0.00       1/2           ft_push_single_to_multi [43]
-----------------------------------------------
                0.00    0.00     999/999         main [4]
[30]     0.0    0.00    0.00     999         move [30]
                0.00    0.00    1567/3767        ft_dclst_find_lowest_int [15]
                0.00    0.00     999/999         select_move_to_execute [31]
-----------------------------------------------
                0.00    0.00     999/999         move [30]
[31]     0.0    0.00    0.00     999         select_move_to_execute [31]
                0.00    0.00     290/290         move_rot [33]
                0.00    0.00     246/246         move_opo_srot_drev [34]
                0.00    0.00     240/240         move_opo_srev_drot [35]
                0.00    0.00     223/223         move_rev [36]
-----------------------------------------------
                0.00    0.00     999/999         main [4]
[32]     0.0    0.00    0.00     999         update_sorted_status [32]
                0.00    0.00     198/198         ft_dclst_clock_sortd [37]
-----------------------------------------------
                0.00    0.00     290/290         select_move_to_execute [31]
[33]     0.0    0.00    0.00     290         move_rot [33]
                0.00    0.00    1687/1687        rr [20]
                0.00    0.00    1587/3797        rb [14]
                0.00    0.00     290/1000        pb [29]
                0.00    0.00     207/1407        ra [22]
-----------------------------------------------
                0.00    0.00     246/246         select_move_to_execute [31]
[34]     0.0    0.00    0.00     246         move_opo_srot_drev [34]
                0.00    0.00    1762/2859        rrb [17]
                0.00    0.00    1198/1407        ra [22]
                0.00    0.00     246/1000        pb [29]
-----------------------------------------------
                0.00    0.00     240/240         select_move_to_execute [31]
[35]     0.0    0.00    0.00     240         move_opo_srev_drot [35]
                0.00    0.00    1757/3797        rb [14]
                0.00    0.00    1166/1287        rra [23]
                0.00    0.00     240/1000        pb [29]
-----------------------------------------------
                0.00    0.00     223/223         select_move_to_execute [31]
[36]     0.0    0.00    0.00     223         move_rev [36]
                0.00    0.00    1497/1497        rrr [21]
                0.00    0.00    1097/2859        rrb [17]
                0.00    0.00     223/1000        pb [29]
                0.00    0.00     121/1287        rra [23]
-----------------------------------------------
                0.00    0.00     198/198         update_sorted_status [32]
[37]     0.0    0.00    0.00     198         ft_dclst_clock_sortd [37]
                0.00    0.00      99/99          ft_check_int_normal_2 [38]
                0.00    0.00      99/99          ft_check_int_reverse_2 [39]
-----------------------------------------------
                0.00    0.00      99/99          ft_dclst_clock_sortd [37]
[38]     0.0    0.00    0.00      99         ft_check_int_normal_2 [38]
                0.00    0.00      99/3767        ft_dclst_find_lowest_int [15]
                0.00    0.00      99/2200        ft_dclst_find_highest_int [18]
-----------------------------------------------
                0.00    0.00      99/99          ft_dclst_clock_sortd [37]
[39]     0.0    0.00    0.00      99         ft_check_int_reverse_2 [39]
                0.00    0.00      99/3767        ft_dclst_find_lowest_int [15]
                0.00    0.00      99/2200        ft_dclst_find_highest_int [18]
-----------------------------------------------
                0.00    0.00       2/2           move_node_to_top [44]
[40]     0.0    0.00    0.00       2         ft_dclst_dist_head_bidi [40]
                0.00    0.00       1/2           ft_dclstsize [41]
-----------------------------------------------
                0.00    0.00       1/2           ft_init_stacks_and_table [47]
                0.00    0.00       1/2           ft_dclst_dist_head_bidi [40]
[41]     0.0    0.00    0.00       2         ft_dclstsize [41]
-----------------------------------------------
                0.00    0.00       1/2           pa [28]
                0.00    0.00       1/2           pb [29]
[42]     0.0    0.00    0.00       2         ft_push_multi_to_empty [42]
-----------------------------------------------
                0.00    0.00       1/2           pa [28]
                0.00    0.00       1/2           pb [29]
[43]     0.0    0.00    0.00       2         ft_push_single_to_multi [43]
-----------------------------------------------
                0.00    0.00       2/2           main [4]
[44]     0.0    0.00    0.00       2         move_node_to_top [44]
                0.00    0.00     453/3797        rb [14]
                0.00    0.00       2/2           ft_dclst_dist_head_bidi [40]
-----------------------------------------------
                0.00    0.00       1/1           ft_init_stacks_and_table [47]
[45]     0.0    0.00    0.00       1         ft_assign_indexes_to_labels [45]
                0.00    0.00       1/1           ft_sort_int_array_bubble [53]
                0.00    0.00       1/1           ft_match_index [52]
-----------------------------------------------
                0.00    0.00       1/1           main [4]
[46]     0.0    0.00    0.00       1         ft_init_stack_b [46]
                0.00    0.00       2/1407        ra [22]
                0.00    0.00       1/1000        pb [29]
-----------------------------------------------
                0.00    0.00       1/1           main [4]
[47]     0.0    0.00    0.00       1         ft_init_stacks_and_table [47]
                0.00    0.00       1/1           ft_malloc_and_init_nodes [51]
                0.00    0.00       1/2           ft_dclstsize [41]
                0.00    0.00       1/1           ft_assign_indexes_to_labels [45]
-----------------------------------------------
                0.00    0.00       1/1           ft_validate_args [54]
[48]     0.0    0.00    0.00       1         ft_labels_are_distinct_and_size_int [48]
                0.00    0.00    1000/3998        ft_atoi [13]
-----------------------------------------------
                0.00    0.00       1/1           ft_validate_args [54]
[49]     0.0    0.00    0.00       1         ft_labels_are_integer_only [49]
                0.00    0.00    2893/2893        ft_isdigit [16]
                0.00    0.00    1000/1000        ft_isspace [27]
-----------------------------------------------
                0.00    0.00       1/1           ft_validate_args [54]
[50]     0.0    0.00    0.00       1         ft_labels_are_sorted [50]
                0.00    0.00    1998/3998        ft_atoi [13]
-----------------------------------------------
                0.00    0.00       1/1           ft_init_stacks_and_table [47]
[51]     0.0    0.00    0.00       1         ft_malloc_and_init_nodes [51]
                0.00    0.00    1000/3998        ft_atoi [13]
                0.00    0.00    1000/1000        ft_init_node_values [26]
                0.00    0.00    1000/1000        ft_dclstadd_back [25]
-----------------------------------------------
                0.00    0.00       1/1           ft_assign_indexes_to_labels [45]
[52]     0.0    0.00    0.00       1         ft_match_index [52]
-----------------------------------------------
                0.00    0.00       1/1           ft_assign_indexes_to_labels [45]
[53]     0.0    0.00    0.00       1         ft_sort_int_array_bubble [53]
-----------------------------------------------
                0.00    0.00       1/1           main [4]
[54]     0.0    0.00    0.00       1         ft_validate_args [54]
                0.00    0.00       1/1           ft_labels_are_integer_only [49]
                0.00    0.00       1/1           ft_labels_are_distinct_and_size_int [48]
                0.00    0.00       1/1           ft_labels_are_sorted [50]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2024 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [2] calculate_all_costs    [46] ft_init_stack_b        [44] move_node_to_top
   [1] calculate_cost_a_to_b  [47] ft_init_stacks_and_table [35] move_opo_srev_drot
   [3] calculate_each_node_in_a [16] ft_isdigit           [34] move_opo_srot_drev
  [24] find_hi_lo_nodes       [27] ft_isspace             [36] move_rev
  [45] ft_assign_indexes_to_labels [48] ft_labels_are_distinct_and_size_int [33] move_rot
  [13] ft_atoi                [49] ft_labels_are_integer_only [28] pa
  [38] ft_check_int_normal_2  [50] ft_labels_are_sorted   [29] pb
  [39] ft_check_int_reverse_2 [51] ft_malloc_and_init_nodes [22] ra
  [37] ft_dclst_clock_sortd   [52] ft_match_index         [14] rb
  [40] ft_dclst_dist_head_bidi [42] ft_push_multi_to_empty [20] rr
   [5] ft_dclst_dist_head_bidi_len [19] ft_push_multi_to_multi [23] rra
  [18] ft_dclst_find_highest_int [43] ft_push_single_to_multi [17] rrb
  [15] ft_dclst_find_lowest_int [9] ft_putchar_fd         [21] rrr
  [25] ft_dclstadd_back        [6] ft_reset_costs         [31] select_move_to_execute
  [41] ft_dclstsize           [53] ft_sort_int_array_bubble [7] set_costs_of_moves
  [10] ft_dprintf             [12] ft_strlen               [8] set_lowest_node_to_move
  [11] ft_handle_last         [54] ft_validate_args       [32] update_sorted_status
  [26] ft_init_node_values    [30] move
